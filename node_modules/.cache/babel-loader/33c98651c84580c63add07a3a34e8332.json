{"ast":null,"code":"var _jsxFileName = \"/Users/emilymarinaro/Documents/UCLA /projects/spotify_for_funsies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import logo from './logo.svg';\n//import APICall from './API';\n\nimport Dropdown from './components/Dropdown/dropdown';\nimport axios from 'axios';\nimport './App.css'; //const { REACT_APP_CLIENT_SEC, REACT_APP_CLIENT_ID } = process.env;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const data = [{\n    value: 1,\n    name: 'A'\n  }, {\n    value: 2,\n    name: 'B'\n  }, {\n    value: 3,\n    name: 'C'\n  }];\n  const clientSecret = 'f08b7f2916e0478596e57ec0f16f4b0a';\n  const clientId = 'f9b121e7380a482f966c1dbb273db9e3';\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState({\n    selectedGenre: '',\n    listOfGenresFromAPI: []\n  });\n  const [playlist, setPlaylist] = useState({\n    selectedPlaylist: '',\n    listOfPlaylistFromAPI: []\n  });\n  useEffect(() => {\n    //get initial token in order to access endpoints\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: 'Basic ' + btoa(clientId + ':' + clientSecret)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      console.log(tokenResponse.data.access_token);\n      setToken(tokenResponse.data.access_token); //get genres\n\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer ' + tokenResponse.data.access_token\n        }\n      }).then(genreResponse => {\n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items\n        });\n      });\n    });\n  }, [genres.selectedGenre, clientId, clientSecret]);\n\n  const genreChanged = val => {\n    setGenres({\n      selectedGenre: val,\n      listOfGenresFromAPI: genres.listOfGenresFromAPI\n    });\n    axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(playListResponse => {\n      setPlaylist({\n        selectedPlayList: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playListResponse.data.playlists.item\n      });\n    });\n  };\n\n  const playlistChanged = val => {\n    setPlaylist({\n      selectedPlayList: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => {},\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        options: genres.listOfGenresFromAPI,\n        selectedValue: genres.selectedGenre,\n        changed: genreChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: playlist.listOfPlaylistFromAPI,\n        selectedValue: playlist.selectedPlaylist,\n        changed: playlistChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5DWKK4d9iN8HGUPnAh7OuFDyppY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emilymarinaro/Documents/UCLA /projects/spotify_for_funsies/client/src/App.js"],"names":["React","useState","useEffect","Dropdown","axios","App","data","value","name","clientSecret","clientId","token","setToken","genres","setGenres","selectedGenre","listOfGenresFromAPI","playlist","setPlaylist","selectedPlaylist","listOfPlaylistFromAPI","headers","Authorization","btoa","method","then","tokenResponse","console","log","access_token","genreResponse","categories","items","genreChanged","val","playListResponse","selectedPlayList","playlists","item","playlistChanged"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import logo from './logo.svg';\n//import APICall from './API';\nimport Dropdown from './components/Dropdown/dropdown';\nimport axios from 'axios';\nimport './App.css';\n//const { REACT_APP_CLIENT_SEC, REACT_APP_CLIENT_ID } = process.env;\n\nfunction App() {\n  const data = [\n    { value: 1, name: 'A' },\n    { value: 2, name: 'B' },\n    { value: 3, name: 'C' },\n  ];\n  const clientSecret = 'f08b7f2916e0478596e57ec0f16f4b0a';\n  const clientId = 'f9b121e7380a482f966c1dbb273db9e3';\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState({\n    selectedGenre: '',\n    listOfGenresFromAPI: [],\n  });\n  const [playlist, setPlaylist] = useState({\n    selectedPlaylist: '',\n    listOfPlaylistFromAPI: [],\n  });\n\n  useEffect(() => {\n    //get initial token in order to access endpoints\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: 'Basic ' + btoa(clientId + ':' + clientSecret),\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST',\n    }).then((tokenResponse) => {\n      console.log(tokenResponse.data.access_token);\n      setToken(tokenResponse.data.access_token);\n      //get genres\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: { Authorization: 'Bearer ' + tokenResponse.data.access_token },\n      }).then((genreResponse) => {\n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items,\n        });\n      });\n    });\n  }, [genres.selectedGenre, clientId, clientSecret]);\n\n  const genreChanged = (val) => {\n    setGenres({\n      selectedGenre: val,\n      listOfGenresFromAPI: genres.listOfGenresFromAPI,\n    });\n    axios(\n      `https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`,\n      {\n        method: 'GET',\n        headers: { Authorization: 'Bearer ' + token },\n      }\n    ).then((playListResponse) => {\n      setPlaylist({\n        selectedPlayList: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playListResponse.data.playlists.item,\n      });\n    });\n  };\n\n  const playlistChanged = (val) => {\n    setPlaylist({\n      selectedPlayList: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI,\n    });\n  };\n\n  return (\n    <div className='App'>\n      <form onSubmit={() => {}}>\n        <Dropdown\n          options={genres.listOfGenresFromAPI}\n          selectedValue={genres.selectedGenre}\n          changed={genreChanged}\n        />\n        <Dropdown\n          options={playlist.listOfPlaylistFromAPI}\n          selectedValue={playlist.selectedPlaylist}\n          changed={playlistChanged}\n        />\n        <button type='submit'>Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}