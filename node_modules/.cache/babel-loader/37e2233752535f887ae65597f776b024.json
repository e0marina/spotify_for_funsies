{"ast":null,"code":"var _jsxFileName = \"/Users/emilymarinaro/Documents/UCLA /projects/spotify_for_funsies/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import logo from './logo.svg';\n//import APICall from './API';\n\nimport Dropdown from './components/Dropdown/dropdown';\nimport TrackListContainer from './components/TrackListContainer/trackListContainer';\nimport axios from 'axios';\nimport './App.css'; //const { REACT_APP_CLIENT_SEC, REACT_APP_CLIENT_ID } = process.env;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const data = [{\n    value: 1,\n    name: 'A'\n  }, {\n    value: 2,\n    name: 'B'\n  }, {\n    value: 3,\n    name: 'C'\n  }];\n  const clientSecret = 'f08b7f2916e0478596e57ec0f16f4b0a';\n  const clientId = 'f9b121e7380a482f966c1dbb273db9e3';\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState({\n    selectedGenre: '',\n    listOfGenresFromAPI: []\n  });\n  const [playlist, setPlaylist] = useState({\n    selectedPlaylist: '',\n    listOfPlaylistFromAPI: []\n  });\n  const [tracks, setTracks] = useState({\n    selectedTrack: '',\n    listOfTracksFromAPI: []\n  });\n  useEffect(() => {\n    //get initial token in order to access endpoints\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: 'Basic ' + btoa(clientId + ':' + clientSecret)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      console.log(tokenResponse.data.access_token);\n      setToken(tokenResponse.data.access_token); //get genres\n\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer ' + tokenResponse.data.access_token\n        }\n      }).then(genreResponse => {\n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items\n        });\n      });\n    });\n  }, [genres.selectedGenre, clientId, clientSecret]);\n\n  const genreChanged = val => {\n    setGenres({\n      selectedGenre: val,\n      listOfGenresFromAPI: genres.listOfGenresFromAPI\n    }); //get playlists\n\n    axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(playlistResponse => {\n      setPlaylist({\n        selectedPlaylist: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items\n      });\n    });\n  };\n\n  const playlistChanged = val => {\n    setPlaylist({\n      selectedPlayList: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI\n    });\n  };\n\n  const buttonClicked = e => {\n    e.preventDefault();\n    axios(`https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(tracksResponse => {\n      setTracks({\n        selectedTrack: tracks.selectedTrack,\n        listOfTracksFromAPI: tracksResponse.data.items\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: buttonClicked,\n      children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n        options: genres.listOfGenresFromAPI,\n        selectedValue: genres.selectedGenre,\n        changed: genreChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        options: playlist.listOfPlaylistFromAPI,\n        selectedValue: playlist.selectedPlaylist,\n        changed: playlistChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TrackListContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OsessLXQwI+Ltnw+RmMmzDKxlDU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/emilymarinaro/Documents/UCLA /projects/spotify_for_funsies/client/src/App.js"],"names":["React","useState","useEffect","Dropdown","TrackListContainer","axios","App","data","value","name","clientSecret","clientId","token","setToken","genres","setGenres","selectedGenre","listOfGenresFromAPI","playlist","setPlaylist","selectedPlaylist","listOfPlaylistFromAPI","tracks","setTracks","selectedTrack","listOfTracksFromAPI","headers","Authorization","btoa","method","then","tokenResponse","console","log","access_token","genreResponse","categories","items","genreChanged","val","playlistResponse","playlists","playlistChanged","selectedPlayList","buttonClicked","e","preventDefault","tracksResponse"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,kBAAP,MAA+B,oDAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GADW,EAEX;AAAED,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAFW,EAGX;AAAED,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAHW,CAAb;AAKA,QAAMC,YAAY,GAAG,kCAArB;AACA,QAAMC,QAAQ,GAAG,kCAAjB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC;AACnCe,IAAAA,aAAa,EAAE,EADoB;AAEnCC,IAAAA,mBAAmB,EAAE;AAFc,GAAD,CAApC;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AACvCmB,IAAAA,gBAAgB,EAAE,EADqB;AAEvCC,IAAAA,qBAAqB,EAAE;AAFgB,GAAD,CAAxC;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC;AACnCuB,IAAAA,aAAa,EAAE,EADoB;AAEnCC,IAAAA,mBAAmB,EAAE;AAFc,GAAD,CAApC;AAKAvB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAG,IAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC9CqB,MAAAA,OAAO,EAAE;AACP,wBAAgB,mCADT;AAEPC,QAAAA,aAAa,EAAE,WAAWC,IAAI,CAACjB,QAAQ,GAAG,GAAX,GAAiBD,YAAlB;AAFvB,OADqC;AAK9CH,MAAAA,IAAI,EAAE,+BALwC;AAM9CsB,MAAAA,MAAM,EAAE;AANsC,KAA3C,CAAL,CAOGC,IAPH,CAOSC,aAAD,IAAmB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACxB,IAAd,CAAmB2B,YAA/B;AACArB,MAAAA,QAAQ,CAACkB,aAAa,CAACxB,IAAd,CAAmB2B,YAApB,CAAR,CAFyB,CAGzB;;AACA7B,MAAAA,KAAK,CAAC,2DAAD,EAA8D;AACjEwB,QAAAA,MAAM,EAAE,KADyD;AAEjEH,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAE,YAAYI,aAAa,CAACxB,IAAd,CAAmB2B;AAAhD;AAFwD,OAA9D,CAAL,CAGGJ,IAHH,CAGSK,aAAD,IAAmB;AACzBpB,QAAAA,SAAS,CAAC;AACRC,UAAAA,aAAa,EAAEF,MAAM,CAACE,aADd;AAERC,UAAAA,mBAAmB,EAAEkB,aAAa,CAAC5B,IAAd,CAAmB6B,UAAnB,CAA8BC;AAF3C,SAAD,CAAT;AAID,OARD;AASD,KApBD;AAqBD,GAvBQ,EAuBN,CAACvB,MAAM,CAACE,aAAR,EAAuBL,QAAvB,EAAiCD,YAAjC,CAvBM,CAAT;;AAyBA,QAAM4B,YAAY,GAAIC,GAAD,IAAS;AAC5BxB,IAAAA,SAAS,CAAC;AACRC,MAAAA,aAAa,EAAEuB,GADP;AAERtB,MAAAA,mBAAmB,EAAEH,MAAM,CAACG;AAFpB,KAAD,CAAT,CAD4B,CAM5B;;AACAZ,IAAAA,KAAK,CACF,gDAA+CkC,GAAI,qBADjD,EAEH;AACEV,MAAAA,MAAM,EAAE,KADV;AAEEH,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYf;AAA7B;AAFX,KAFG,CAAL,CAMEkB,IANF,CAMQU,gBAAD,IAAsB;AAC3BrB,MAAAA,WAAW,CAAC;AACVC,QAAAA,gBAAgB,EAAEF,QAAQ,CAACE,gBADjB;AAEVC,QAAAA,qBAAqB,EAAEmB,gBAAgB,CAACjC,IAAjB,CAAsBkC,SAAtB,CAAgCJ;AAF7C,OAAD,CAAX;AAID,KAXD;AAYD,GAnBD;;AAqBA,QAAMK,eAAe,GAAIH,GAAD,IAAS;AAC/BpB,IAAAA,WAAW,CAAC;AACVwB,MAAAA,gBAAgB,EAAEJ,GADR;AAEVlB,MAAAA,qBAAqB,EAAEH,QAAQ,CAACG;AAFtB,KAAD,CAAX;AAID,GALD;;AAOA,QAAMuB,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEAzC,IAAAA,KAAK,CACF,wCAAuCa,QAAQ,CAACE,gBAAiB,kBAD/D,EAEH;AACES,MAAAA,MAAM,EAAE,KADV;AAEEH,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYf;AADpB;AAFX,KAFG,CAAL,CAQEkB,IARF,CAQQiB,cAAD,IAAoB;AACzBxB,MAAAA,SAAS,CAAC;AACRC,QAAAA,aAAa,EAAEF,MAAM,CAACE,aADd;AAERC,QAAAA,mBAAmB,EAAEsB,cAAc,CAACxC,IAAf,CAAoB8B;AAFjC,OAAD,CAAT;AAID,KAbD;AAcD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEO,aAAhB;AAAA,8BACE,QAAC,QAAD;AACE,QAAA,OAAO,EAAE9B,MAAM,CAACG,mBADlB;AAEE,QAAA,aAAa,EAAEH,MAAM,CAACE,aAFxB;AAGE,QAAA,OAAO,EAAEsB;AAHX;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,QAAD;AACE,QAAA,OAAO,EAAEpB,QAAQ,CAACG,qBADpB;AAEE,QAAA,aAAa,EAAEH,QAAQ,CAACE,gBAF1B;AAGE,QAAA,OAAO,EAAEsB;AAHX;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAhHQpC,G;;KAAAA,G;AAkHT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import logo from './logo.svg';\n//import APICall from './API';\nimport Dropdown from './components/Dropdown/dropdown';\nimport TrackListContainer from './components/TrackListContainer/trackListContainer';\nimport axios from 'axios';\nimport './App.css';\n//const { REACT_APP_CLIENT_SEC, REACT_APP_CLIENT_ID } = process.env;\n\nfunction App() {\n  const data = [\n    { value: 1, name: 'A' },\n    { value: 2, name: 'B' },\n    { value: 3, name: 'C' },\n  ];\n  const clientSecret = 'f08b7f2916e0478596e57ec0f16f4b0a';\n  const clientId = 'f9b121e7380a482f966c1dbb273db9e3';\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState({\n    selectedGenre: '',\n    listOfGenresFromAPI: [],\n  });\n  const [playlist, setPlaylist] = useState({\n    selectedPlaylist: '',\n    listOfPlaylistFromAPI: [],\n  });\n  const [tracks, setTracks] = useState({\n    selectedTrack: '',\n    listOfTracksFromAPI: [],\n  });\n\n  useEffect(() => {\n    //get initial token in order to access endpoints\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: 'Basic ' + btoa(clientId + ':' + clientSecret),\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST',\n    }).then((tokenResponse) => {\n      console.log(tokenResponse.data.access_token);\n      setToken(tokenResponse.data.access_token);\n      //get genres\n      axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\n        method: 'GET',\n        headers: { Authorization: 'Bearer ' + tokenResponse.data.access_token },\n      }).then((genreResponse) => {\n        setGenres({\n          selectedGenre: genres.selectedGenre,\n          listOfGenresFromAPI: genreResponse.data.categories.items,\n        });\n      });\n    });\n  }, [genres.selectedGenre, clientId, clientSecret]);\n\n  const genreChanged = (val) => {\n    setGenres({\n      selectedGenre: val,\n      listOfGenresFromAPI: genres.listOfGenresFromAPI,\n    });\n\n    //get playlists\n    axios(\n      `https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`,\n      {\n        method: 'GET',\n        headers: { Authorization: 'Bearer ' + token },\n      }\n    ).then((playlistResponse) => {\n      setPlaylist({\n        selectedPlaylist: playlist.selectedPlaylist,\n        listOfPlaylistFromAPI: playlistResponse.data.playlists.items,\n      });\n    });\n  };\n\n  const playlistChanged = (val) => {\n    setPlaylist({\n      selectedPlayList: val,\n      listOfPlaylistFromAPI: playlist.listOfPlaylistFromAPI,\n    });\n  };\n\n  const buttonClicked = (e) => {\n    e.preventDefault();\n\n    axios(\n      `https://api.spotify.com/v1/playlists/${playlist.selectedPlaylist}/tracks?limit=10`,\n      {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer ' + token,\n        },\n      }\n    ).then((tracksResponse) => {\n      setTracks({\n        selectedTrack: tracks.selectedTrack,\n        listOfTracksFromAPI: tracksResponse.data.items,\n      });\n    });\n  };\n\n  return (\n    <div className='App'>\n      <form onSubmit={buttonClicked}>\n        <Dropdown\n          options={genres.listOfGenresFromAPI}\n          selectedValue={genres.selectedGenre}\n          changed={genreChanged}\n        />\n        <Dropdown\n          options={playlist.listOfPlaylistFromAPI}\n          selectedValue={playlist.selectedPlaylist}\n          changed={playlistChanged}\n        />\n        <button type='submit'>Search</button>\n        <TrackListContainer />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}